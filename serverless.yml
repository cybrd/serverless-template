service: serverless-template

plugins:
  - serverless-plugin-typescript
  - serverless-domain-manager

package:
  patterns:
    - "!node_modules/aws-sdk/**"

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  deploymentBucket:
    name: deployments.bryansuralta
    blockPublicAccess: true

  profile: serverless-template
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:*
          Resource: "*"

custom:
  customDomain:
    http:
      domainName: api.template.bryansuralta.com
      endpointType: "regional"

functions:
  findByUserHandler:
    handler: src/handlers/user.findByUserHandler
    events:
      - httpApi: "POST /findByUserHandler"
  findByEmailHandler:
    handler: src/handlers/user.findByEmailHandler
    events:
      - httpApi: "POST /findByEmailHandler"

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: serverless-template-dynamodb
        AttributeDefinitions:
          - AttributeName: user
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: user
            KeyType: HASH
          - AttributeName: email
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
